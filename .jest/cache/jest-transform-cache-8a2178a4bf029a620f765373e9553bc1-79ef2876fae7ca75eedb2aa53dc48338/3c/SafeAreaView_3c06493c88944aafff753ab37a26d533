3db2d25c538a3524c7630cc4e21d6ec6
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["edges"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SafeAreaView = void 0;
var React = _interopRequireWildcard(require("react"));
var _NativeSafeAreaView = _interopRequireDefault(require("./specs/NativeSafeAreaView"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var defaultEdges = {
  top: 'additive',
  left: 'additive',
  bottom: 'additive',
  right: 'additive'
};
var SafeAreaView = React.forwardRef(function (_ref, ref) {
  var edges = _ref.edges,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var nativeEdges = (0, React.useMemo)(function () {
    var _edgesObj$top, _edgesObj$right, _edgesObj$bottom, _edgesObj$left;
    if (edges == null) {
      return defaultEdges;
    }
    var edgesObj = Array.isArray(edges) ? edges.reduce(function (acc, edge) {
      acc[edge] = 'additive';
      return acc;
    }, {}) : edges;
    var requiredEdges = {
      top: (_edgesObj$top = edgesObj.top) != null ? _edgesObj$top : 'off',
      right: (_edgesObj$right = edgesObj.right) != null ? _edgesObj$right : 'off',
      bottom: (_edgesObj$bottom = edgesObj.bottom) != null ? _edgesObj$bottom : 'off',
      left: (_edgesObj$left = edgesObj.left) != null ? _edgesObj$left : 'off'
    };
    return requiredEdges;
  }, [edges]);
  return React.createElement(_NativeSafeAreaView.default, _extends({}, props, {
    edges: nativeEdges,
    ref: ref
  }));
});
exports.SafeAreaView = SafeAreaView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9OYXRpdmVTYWZlQXJlYVZpZXciLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJhcHBseSIsImRlZmF1bHRFZGdlcyIsInRvcCIsImxlZnQiLCJib3R0b20iLCJyaWdodCIsIlNhZmVBcmVhVmlldyIsImZvcndhcmRSZWYiLCJfcmVmIiwicmVmIiwiZWRnZXMiLCJwcm9wcyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJfZXhjbHVkZWQiLCJuYXRpdmVFZGdlcyIsInVzZU1lbW8iLCJfZWRnZXNPYmokdG9wIiwiX2VkZ2VzT2JqJHJpZ2h0IiwiX2VkZ2VzT2JqJGJvdHRvbSIsIl9lZGdlc09iaiRsZWZ0IiwiZWRnZXNPYmoiLCJBcnJheSIsImlzQXJyYXkiLCJyZWR1Y2UiLCJhY2MiLCJlZGdlIiwicmVxdWlyZWRFZGdlcyIsImNyZWF0ZUVsZW1lbnQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL1NhZmVBcmVhVmlldy50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQUFBLEtB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